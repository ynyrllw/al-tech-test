---
- include: packages.yml

- name: get local working dir
  local_action: shell pwd
  register: local_working_dir
  changed_when: false

- name: clean up {{ tmp_dir }} before deployment
  file:
    name: "{{ tmp_dir }}"
    state: absent
  changed_when: false

- name: ensure {{ tmp_dir }} exists
  file:
    name: "{{ tmp_dir }}"
    state: directory
  changed_when: false

- name: generate all templates
  template: 
    src: "{{ item.src }}"
    dest: "{{ tmp_dir }}/{{ item.dest }}"
  with_items:
    - { src: "Dockerfile.j2", dest: "Dockerfile" }
    - { src: "uwsgi.ini.j2", dest: "uwsgi.ini" }
    - { src: "start.sh.j2", dest: "start.sh" }
      
- name: copy python app reuquirements and manage.py
  template: 
    src: "{{ item }}"
    dest: "{{ tmp_dir }}"
  with_fileglob:
    - "../templates/al-python-web-app/*"

- name: copy python app
  copy: 
    src: "/vagrant/roles/al-tech-test/templates/al_proj/"
    dest: "{{ tmp_dir}}"

- name: build docker image for django uwsgi web app
  become: yes
  docker_image:
    api_version: "{{ docker_api_version }}"
    build:
      path: "{{ tmp_dir }}"
    name: "{{ app_name }}"
    push: false
    state: present

- name: ensure nginx conf.d directory exists
  file:
    name: "/etc/nginx/conf.d"
    state: directory

- name: create nginx config for {{ app_name }}
  template:
    src: nginx.conf.j2
    dest: "/etc/nginx/conf.d/{{ app_name }}.conf"

- name: run docker container for django uwsgi web app
  docker_container:
    api_version: "{{ docker_api_version }}"
    name: "django"
    image: "{{ app_name }}"
    state: started
    ports:
      - "8000:8000"

- name: run docker container for django uwsgi web app 2
  docker_container:
    api_version: "{{ docker_api_version }}"
    name: "django2"
    image: "{{ app_name }}"
    state: started
    ports:
      - "8001:8000"

- name: run docker container for nginx
  docker_container:
    api_version: "{{ docker_api_version }}"
    name: nginx
    image: nginx:{{ docker_nginx_version }}
    recreate: true
    state: started
    #use journald instead of docker logs in future
    log_driver: journald
    log_options:
    ports:
      - "80:80"
      - "443:443"
    links:
      - "django"
      - "django2"
    volumes:
      - "/etc/nginx/conf.d/{{ app_name }}.conf:/etc/nginx/conf.d/{{ app_name }}.conf"
  changed_when: false

- name: first GET request to nginx
  uri:
    url: http://127.0.0.1:80

- name: second GET request to nginx
  uri:
    url: http://127.0.0.1:80
    return_content: yes
  register: this
  failed_when: "'Hello World' not in this.content"

- name: docker logs nginx
  command: docker logs nginx
  register: docker_logs
  become: yes

- fail:
    msg: 'checking for {{ item }} in standard output'
  when: item not in docker_logs.stdout
  with_items:
    - '172.17.0.3'
    - '72.17.0.2'
